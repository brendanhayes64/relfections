What happens when you initialize a repository? Why do you need to do it?
	
	It creates a new .git directory with 0 commits. You need this so you can start committing files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	
	The staging area lets you control which files to commit and when. It allows for grouping files and then commit all at once.

How can you use the staging area to make sure you have one commit per logical change?

	You can view the differences between the staging area and the last commit to see what has changed.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	
	Branches are good if you are making some changes or trying a new approach and are unsure how they might work out. It allows you the freedom to do this and not worry about remembering the last "good" commit.

How do the diagrams help you visualize the branch structure?
	
	Make it simple to follow the commits and see where branches branched off from the master.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	It creates a new branch containing all the commits from each branch back to the point where they split off. It is represented as a new commit that with 2 different parent commits.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	A pro is that you don't have to go over each file/branch and figure out what should be in the merged file. A con is that you might not always be fully aware of all the changes