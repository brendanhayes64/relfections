How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	It shows you which lines are different and therefore can quickly point out mistakes.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	It would allow you to go back in time and reverse a decision quickly and easily without having to remember things you changed/added/removed.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

	Pro - You get to choose when to do it, commits might make more logical sense to you.
	Con - Forget to commit and lose all your work, large commits mean lots of differences between files.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Git is designed for code, often times which means multiple files while other systems generally are used for basic stand alone documents.

How can you use the commands git log and git diff to view the history of files?

	Git log lets you see high level changes (based on the commit note) and stats while git diff shows you actual changes made between the 2 files.

How might using version control make you more confident to make changes that could break something?

	You can easily go back to a working file if somethung breaks

Now that you have your workspace set up, what do you want to try using Git for?

	Uploading a project!
	
